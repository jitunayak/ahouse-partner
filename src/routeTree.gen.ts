/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as UpdatePasswordImport } from './routes/update-password'
import { Route as ResetPasswordImport } from './routes/reset-password'
import { Route as LoginImport } from './routes/login'
import { Route as IndexImport } from './routes/index'
import { Route as HomeHomeImport } from './routes/home/_home'
import { Route as HomeHomeIndexImport } from './routes/home/_home.index'
import { Route as HomeHomeManagementImport } from './routes/home/_home.management'
import { Route as HomeHomeInboxImport } from './routes/home/_home.inbox'
import { Route as HomeHomeAssetListingImport } from './routes/home/_home.asset-listing'

// Create Virtual Routes

const HomeImport = createFileRoute('/home')()
const R403LazyImport = createFileRoute('/403')()

// Create/Update Routes

const HomeRoute = HomeImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => rootRoute,
} as any)

const R403LazyRoute = R403LazyImport.update({
  id: '/403',
  path: '/403',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/403.lazy').then((d) => d.Route))

const UpdatePasswordRoute = UpdatePasswordImport.update({
  id: '/update-password',
  path: '/update-password',
  getParentRoute: () => rootRoute,
} as any)

const ResetPasswordRoute = ResetPasswordImport.update({
  id: '/reset-password',
  path: '/reset-password',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const HomeHomeRoute = HomeHomeImport.update({
  id: '/_home',
  getParentRoute: () => HomeRoute,
} as any)

const HomeHomeIndexRoute = HomeHomeIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => HomeHomeRoute,
} as any)

const HomeHomeManagementRoute = HomeHomeManagementImport.update({
  id: '/management',
  path: '/management',
  getParentRoute: () => HomeHomeRoute,
} as any)

const HomeHomeInboxRoute = HomeHomeInboxImport.update({
  id: '/inbox',
  path: '/inbox',
  getParentRoute: () => HomeHomeRoute,
} as any)

const HomeHomeAssetListingRoute = HomeHomeAssetListingImport.update({
  id: '/asset-listing',
  path: '/asset-listing',
  getParentRoute: () => HomeHomeRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/reset-password': {
      id: '/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof ResetPasswordImport
      parentRoute: typeof rootRoute
    }
    '/update-password': {
      id: '/update-password'
      path: '/update-password'
      fullPath: '/update-password'
      preLoaderRoute: typeof UpdatePasswordImport
      parentRoute: typeof rootRoute
    }
    '/403': {
      id: '/403'
      path: '/403'
      fullPath: '/403'
      preLoaderRoute: typeof R403LazyImport
      parentRoute: typeof rootRoute
    }
    '/home': {
      id: '/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof HomeImport
      parentRoute: typeof rootRoute
    }
    '/home/_home': {
      id: '/home/_home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof HomeHomeImport
      parentRoute: typeof HomeRoute
    }
    '/home/_home/asset-listing': {
      id: '/home/_home/asset-listing'
      path: '/asset-listing'
      fullPath: '/home/asset-listing'
      preLoaderRoute: typeof HomeHomeAssetListingImport
      parentRoute: typeof HomeHomeImport
    }
    '/home/_home/inbox': {
      id: '/home/_home/inbox'
      path: '/inbox'
      fullPath: '/home/inbox'
      preLoaderRoute: typeof HomeHomeInboxImport
      parentRoute: typeof HomeHomeImport
    }
    '/home/_home/management': {
      id: '/home/_home/management'
      path: '/management'
      fullPath: '/home/management'
      preLoaderRoute: typeof HomeHomeManagementImport
      parentRoute: typeof HomeHomeImport
    }
    '/home/_home/': {
      id: '/home/_home/'
      path: '/'
      fullPath: '/home/'
      preLoaderRoute: typeof HomeHomeIndexImport
      parentRoute: typeof HomeHomeImport
    }
  }
}

// Create and export the route tree

interface HomeHomeRouteChildren {
  HomeHomeAssetListingRoute: typeof HomeHomeAssetListingRoute
  HomeHomeInboxRoute: typeof HomeHomeInboxRoute
  HomeHomeManagementRoute: typeof HomeHomeManagementRoute
  HomeHomeIndexRoute: typeof HomeHomeIndexRoute
}

const HomeHomeRouteChildren: HomeHomeRouteChildren = {
  HomeHomeAssetListingRoute: HomeHomeAssetListingRoute,
  HomeHomeInboxRoute: HomeHomeInboxRoute,
  HomeHomeManagementRoute: HomeHomeManagementRoute,
  HomeHomeIndexRoute: HomeHomeIndexRoute,
}

const HomeHomeRouteWithChildren = HomeHomeRoute._addFileChildren(
  HomeHomeRouteChildren,
)

interface HomeRouteChildren {
  HomeHomeRoute: typeof HomeHomeRouteWithChildren
}

const HomeRouteChildren: HomeRouteChildren = {
  HomeHomeRoute: HomeHomeRouteWithChildren,
}

const HomeRouteWithChildren = HomeRoute._addFileChildren(HomeRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/reset-password': typeof ResetPasswordRoute
  '/update-password': typeof UpdatePasswordRoute
  '/403': typeof R403LazyRoute
  '/home': typeof HomeHomeRouteWithChildren
  '/home/asset-listing': typeof HomeHomeAssetListingRoute
  '/home/inbox': typeof HomeHomeInboxRoute
  '/home/management': typeof HomeHomeManagementRoute
  '/home/': typeof HomeHomeIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/reset-password': typeof ResetPasswordRoute
  '/update-password': typeof UpdatePasswordRoute
  '/403': typeof R403LazyRoute
  '/home': typeof HomeHomeIndexRoute
  '/home/asset-listing': typeof HomeHomeAssetListingRoute
  '/home/inbox': typeof HomeHomeInboxRoute
  '/home/management': typeof HomeHomeManagementRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/reset-password': typeof ResetPasswordRoute
  '/update-password': typeof UpdatePasswordRoute
  '/403': typeof R403LazyRoute
  '/home': typeof HomeRouteWithChildren
  '/home/_home': typeof HomeHomeRouteWithChildren
  '/home/_home/asset-listing': typeof HomeHomeAssetListingRoute
  '/home/_home/inbox': typeof HomeHomeInboxRoute
  '/home/_home/management': typeof HomeHomeManagementRoute
  '/home/_home/': typeof HomeHomeIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/reset-password'
    | '/update-password'
    | '/403'
    | '/home'
    | '/home/asset-listing'
    | '/home/inbox'
    | '/home/management'
    | '/home/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/reset-password'
    | '/update-password'
    | '/403'
    | '/home'
    | '/home/asset-listing'
    | '/home/inbox'
    | '/home/management'
  id:
    | '__root__'
    | '/'
    | '/login'
    | '/reset-password'
    | '/update-password'
    | '/403'
    | '/home'
    | '/home/_home'
    | '/home/_home/asset-listing'
    | '/home/_home/inbox'
    | '/home/_home/management'
    | '/home/_home/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LoginRoute: typeof LoginRoute
  ResetPasswordRoute: typeof ResetPasswordRoute
  UpdatePasswordRoute: typeof UpdatePasswordRoute
  R403LazyRoute: typeof R403LazyRoute
  HomeRoute: typeof HomeRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LoginRoute: LoginRoute,
  ResetPasswordRoute: ResetPasswordRoute,
  UpdatePasswordRoute: UpdatePasswordRoute,
  R403LazyRoute: R403LazyRoute,
  HomeRoute: HomeRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/login",
        "/reset-password",
        "/update-password",
        "/403",
        "/home"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/reset-password": {
      "filePath": "reset-password.tsx"
    },
    "/update-password": {
      "filePath": "update-password.tsx"
    },
    "/403": {
      "filePath": "403.lazy.tsx"
    },
    "/home": {
      "filePath": "home",
      "children": [
        "/home/_home"
      ]
    },
    "/home/_home": {
      "filePath": "home/_home.tsx",
      "parent": "/home",
      "children": [
        "/home/_home/asset-listing",
        "/home/_home/inbox",
        "/home/_home/management",
        "/home/_home/"
      ]
    },
    "/home/_home/asset-listing": {
      "filePath": "home/_home.asset-listing.tsx",
      "parent": "/home/_home"
    },
    "/home/_home/inbox": {
      "filePath": "home/_home.inbox.tsx",
      "parent": "/home/_home"
    },
    "/home/_home/management": {
      "filePath": "home/_home.management.tsx",
      "parent": "/home/_home"
    },
    "/home/_home/": {
      "filePath": "home/_home.index.tsx",
      "parent": "/home/_home"
    }
  }
}
ROUTE_MANIFEST_END */
